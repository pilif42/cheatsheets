- To ssh into an Azure instance to verify the deployed .jar for an application:
Go to the Azure portal home at https://portal.azure.com/
Select the relevant App Service, e.g. omsedev1errorsomissions
On the left-hand side, under ‘Development Tools’, select SSH.
Click on Go -> and it will open a cmd prompt at /home.
Check the time with: date
Find the E&O API .jar under /home/site/wwwroot


- To understand how the E&O API was deployed in dev:
Go to the Azure portal at https://portal.azure.com/
Search for Resource groups
Find the relevant one, e.g. omsedev1_rg_errorsandomissions
On the left-hand side, under Settings, select Deployments
Select deployAppService-omsedev1errorsomissions
Select Template on the left-hand side: this will display the ARM (Azure Resource Manager) template used
for the deployment. More details on templates can be found at
https://docs.microsoft.com/en-gb/azure/azure-resource-manager/templates/overview . This is the recommended
 way to deploy an app when using a CICD pipeline.


- When a deployment fails (cmd line in PowerShell or pipeline), the place to look for the error details is:
    - Azure UI -> resource group
    - search for your relevant resource group and select it
    - on the left-hand side, under Settings, select Deployments
    - click on the deployment name having a Failed status. This will list all the steps and their logs.


- To put together changes to an existing ARM template, I used:
      - docs:
          - https://docs.microsoft.com/en-us/azure/templates/ and its section on 'Service Bus'
          - for the queue: https://github.com/Azure/azure-quickstart-templates/blob/master/301-servicebus-create-authrule-namespace-and-queue/azuredeploy.json
          - for the topic: https://github.com/Azure/azure-quickstart-templates/blob/master/201-servicebus-create-topic-subscription-rule/azuredeploy.json
      - the goal was to create a service bus with:
          - a queue which has 2 policies: 1 Send to write msgs to it, 1 Listen to read msgs from it.
          - a topic which has:
                - 2 policies: 1 Send policy to write msgs to it, 1 Listen to read msgs from it.
                - 1 Subscription.
